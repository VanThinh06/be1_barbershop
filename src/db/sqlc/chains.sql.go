// Code generated by sqlc. DO NOT EDIT.
// versions:
//   sqlc v1.23.0
// source: chains.sql

package db

import (
	"context"

	"github.com/google/uuid"
)

const createChain = `-- name: CreateChain :one
INSERT INTO "Chains" (
    owner_id,
   "name"
  )
VALUES (
    $1,
    $2
  )
RETURNING chain_id, owner_id, name, created_at, updated_at
`

type CreateChainParams struct {
	OwnerID uuid.UUID `json:"owner_id"`
	Name    string    `json:"name"`
}

func (q *Queries) CreateChain(ctx context.Context, arg CreateChainParams) (Chain, error) {
	row := q.db.QueryRowContext(ctx, createChain, arg.OwnerID, arg.Name)
	var i Chain
	err := row.Scan(
		&i.ChainID,
		&i.OwnerID,
		&i.Name,
		&i.CreatedAt,
		&i.UpdatedAt,
	)
	return i, err
}

// Code generated by sqlc. DO NOT EDIT.
// versions:
//   sqlc v1.24.0
// source: role_permissions.sql

package db

import (
	"context"

	"github.com/google/uuid"
)

const checkBarberRolePermission = `-- name: CheckBarberRolePermission :one
SELECT EXISTS (
    SELECT 1
    FROM "BarberRoles" br
    JOIN "RolePermissions" rp ON br."role_id" = rp."role_id"
    JOIN "Permissions" p ON rp."permission_id" = p."id"
    WHERE br."barber_id" = $1 AND br."barber_shop_id" = $2 AND p."id" = $3
) AS "has_permission"
`

type CheckBarberRolePermissionParams struct {
	BarberID     uuid.UUID `json:"barber_id"`
	BarberShopID uuid.UUID `json:"barber_shop_id"`
	ID           int16     `json:"id"`
}

func (q *Queries) CheckBarberRolePermission(ctx context.Context, arg CheckBarberRolePermissionParams) (bool, error) {
	row := q.db.QueryRow(ctx, checkBarberRolePermission, arg.BarberID, arg.BarberShopID, arg.ID)
	var has_permission bool
	err := row.Scan(&has_permission)
	return has_permission, err
}

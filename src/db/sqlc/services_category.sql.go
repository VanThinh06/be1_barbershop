// Code generated by sqlc. DO NOT EDIT.
// versions:
//   sqlc v1.23.0
// source: services_category.sql

package db

import (
	"context"

	"github.com/google/uuid"
)

const createServiceCategory = `-- name: CreateServiceCategory :one
INSERT INTO "ServiceCategory" (
"name",
"chain_id",
"gender"
) VALUES (
  $1, $2, $3
)
RETURNING id, chain_id, shop_id, gender, name, created_at, updated_at, hidden
`

type CreateServiceCategoryParams struct {
	Name    string        `json:"name"`
	ChainID uuid.NullUUID `json:"chain_id"`
	Gender  int32         `json:"gender"`
}

func (q *Queries) CreateServiceCategory(ctx context.Context, arg CreateServiceCategoryParams) (ServiceCategory, error) {
	row := q.db.QueryRowContext(ctx, createServiceCategory, arg.Name, arg.ChainID, arg.Gender)
	var i ServiceCategory
	err := row.Scan(
		&i.ID,
		&i.ChainID,
		&i.ShopID,
		&i.Gender,
		&i.Name,
		&i.CreatedAt,
		&i.UpdatedAt,
		&i.Hidden,
	)
	return i, err
}

const createServiceCategoryPrivate = `-- name: CreateServiceCategoryPrivate :one
INSERT INTO "ServiceCategory" (
shop_id,
"name",
"gender"
) VALUES (
  $1, $2, $3
)
RETURNING id, chain_id, shop_id, gender, name, created_at, updated_at, hidden
`

type CreateServiceCategoryPrivateParams struct {
	ShopID uuid.NullUUID `json:"shop_id"`
	Name   string        `json:"name"`
	Gender int32         `json:"gender"`
}

func (q *Queries) CreateServiceCategoryPrivate(ctx context.Context, arg CreateServiceCategoryPrivateParams) (ServiceCategory, error) {
	row := q.db.QueryRowContext(ctx, createServiceCategoryPrivate, arg.ShopID, arg.Name, arg.Gender)
	var i ServiceCategory
	err := row.Scan(
		&i.ID,
		&i.ChainID,
		&i.ShopID,
		&i.Gender,
		&i.Name,
		&i.CreatedAt,
		&i.UpdatedAt,
		&i.Hidden,
	)
	return i, err
}

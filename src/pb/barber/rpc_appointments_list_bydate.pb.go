// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.31.0
// 	protoc        v4.25.0
// source: barber/rpc_appointments_list_bydate.proto

package barber

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	timestamppb "google.golang.org/protobuf/types/known/timestamppb"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type ListAppointmentsByDateRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	BarberId            string                 `protobuf:"bytes,1,opt,name=barber_id,json=barberId,proto3" json:"barber_id,omitempty"`
	AppointmentDatetime *timestamppb.Timestamp `protobuf:"bytes,2,opt,name=appointment_datetime,json=appointmentDatetime,proto3" json:"appointment_datetime,omitempty"`
}

func (x *ListAppointmentsByDateRequest) Reset() {
	*x = ListAppointmentsByDateRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_barber_rpc_appointments_list_bydate_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListAppointmentsByDateRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListAppointmentsByDateRequest) ProtoMessage() {}

func (x *ListAppointmentsByDateRequest) ProtoReflect() protoreflect.Message {
	mi := &file_barber_rpc_appointments_list_bydate_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListAppointmentsByDateRequest.ProtoReflect.Descriptor instead.
func (*ListAppointmentsByDateRequest) Descriptor() ([]byte, []int) {
	return file_barber_rpc_appointments_list_bydate_proto_rawDescGZIP(), []int{0}
}

func (x *ListAppointmentsByDateRequest) GetBarberId() string {
	if x != nil {
		return x.BarberId
	}
	return ""
}

func (x *ListAppointmentsByDateRequest) GetAppointmentDatetime() *timestamppb.Timestamp {
	if x != nil {
		return x.AppointmentDatetime
	}
	return nil
}

type ListAppointmentsByDateResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Appointment []*Appointments `protobuf:"bytes,1,rep,name=appointment,proto3" json:"appointment,omitempty"`
}

func (x *ListAppointmentsByDateResponse) Reset() {
	*x = ListAppointmentsByDateResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_barber_rpc_appointments_list_bydate_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListAppointmentsByDateResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListAppointmentsByDateResponse) ProtoMessage() {}

func (x *ListAppointmentsByDateResponse) ProtoReflect() protoreflect.Message {
	mi := &file_barber_rpc_appointments_list_bydate_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListAppointmentsByDateResponse.ProtoReflect.Descriptor instead.
func (*ListAppointmentsByDateResponse) Descriptor() ([]byte, []int) {
	return file_barber_rpc_appointments_list_bydate_proto_rawDescGZIP(), []int{1}
}

func (x *ListAppointmentsByDateResponse) GetAppointment() []*Appointments {
	if x != nil {
		return x.Appointment
	}
	return nil
}

var File_barber_rpc_appointments_list_bydate_proto protoreflect.FileDescriptor

var file_barber_rpc_appointments_list_bydate_proto_rawDesc = []byte{
	0x0a, 0x29, 0x62, 0x61, 0x72, 0x62, 0x65, 0x72, 0x2f, 0x72, 0x70, 0x63, 0x5f, 0x61, 0x70, 0x70,
	0x6f, 0x69, 0x6e, 0x74, 0x6d, 0x65, 0x6e, 0x74, 0x73, 0x5f, 0x6c, 0x69, 0x73, 0x74, 0x5f, 0x62,
	0x79, 0x64, 0x61, 0x74, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x02, 0x70, 0x62, 0x1a,
	0x19, 0x62, 0x61, 0x72, 0x62, 0x65, 0x72, 0x2f, 0x61, 0x70, 0x70, 0x6f, 0x69, 0x6e, 0x74, 0x6d,
	0x65, 0x6e, 0x74, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x1f, 0x67, 0x6f, 0x6f, 0x67,
	0x6c, 0x65, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2f, 0x74, 0x69, 0x6d, 0x65,
	0x73, 0x74, 0x61, 0x6d, 0x70, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0x8b, 0x01, 0x0a, 0x1d,
	0x4c, 0x69, 0x73, 0x74, 0x41, 0x70, 0x70, 0x6f, 0x69, 0x6e, 0x74, 0x6d, 0x65, 0x6e, 0x74, 0x73,
	0x42, 0x79, 0x44, 0x61, 0x74, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1b, 0x0a,
	0x09, 0x62, 0x61, 0x72, 0x62, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x08, 0x62, 0x61, 0x72, 0x62, 0x65, 0x72, 0x49, 0x64, 0x12, 0x4d, 0x0a, 0x14, 0x61, 0x70,
	0x70, 0x6f, 0x69, 0x6e, 0x74, 0x6d, 0x65, 0x6e, 0x74, 0x5f, 0x64, 0x61, 0x74, 0x65, 0x74, 0x69,
	0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c,
	0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73,
	0x74, 0x61, 0x6d, 0x70, 0x52, 0x13, 0x61, 0x70, 0x70, 0x6f, 0x69, 0x6e, 0x74, 0x6d, 0x65, 0x6e,
	0x74, 0x44, 0x61, 0x74, 0x65, 0x74, 0x69, 0x6d, 0x65, 0x22, 0x54, 0x0a, 0x1e, 0x4c, 0x69, 0x73,
	0x74, 0x41, 0x70, 0x70, 0x6f, 0x69, 0x6e, 0x74, 0x6d, 0x65, 0x6e, 0x74, 0x73, 0x42, 0x79, 0x44,
	0x61, 0x74, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x32, 0x0a, 0x0b, 0x61,
	0x70, 0x70, 0x6f, 0x69, 0x6e, 0x74, 0x6d, 0x65, 0x6e, 0x74, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b,
	0x32, 0x10, 0x2e, 0x70, 0x62, 0x2e, 0x41, 0x70, 0x70, 0x6f, 0x69, 0x6e, 0x74, 0x6d, 0x65, 0x6e,
	0x74, 0x73, 0x52, 0x0b, 0x61, 0x70, 0x70, 0x6f, 0x69, 0x6e, 0x74, 0x6d, 0x65, 0x6e, 0x74, 0x42,
	0x1a, 0x5a, 0x18, 0x62, 0x61, 0x72, 0x62, 0x65, 0x72, 0x73, 0x68, 0x6f, 0x70, 0x2f, 0x73, 0x72,
	0x63, 0x2f, 0x70, 0x62, 0x2f, 0x62, 0x61, 0x72, 0x62, 0x65, 0x72, 0x62, 0x06, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x33,
}

var (
	file_barber_rpc_appointments_list_bydate_proto_rawDescOnce sync.Once
	file_barber_rpc_appointments_list_bydate_proto_rawDescData = file_barber_rpc_appointments_list_bydate_proto_rawDesc
)

func file_barber_rpc_appointments_list_bydate_proto_rawDescGZIP() []byte {
	file_barber_rpc_appointments_list_bydate_proto_rawDescOnce.Do(func() {
		file_barber_rpc_appointments_list_bydate_proto_rawDescData = protoimpl.X.CompressGZIP(file_barber_rpc_appointments_list_bydate_proto_rawDescData)
	})
	return file_barber_rpc_appointments_list_bydate_proto_rawDescData
}

var file_barber_rpc_appointments_list_bydate_proto_msgTypes = make([]protoimpl.MessageInfo, 2)
var file_barber_rpc_appointments_list_bydate_proto_goTypes = []interface{}{
	(*ListAppointmentsByDateRequest)(nil),  // 0: pb.ListAppointmentsByDateRequest
	(*ListAppointmentsByDateResponse)(nil), // 1: pb.ListAppointmentsByDateResponse
	(*timestamppb.Timestamp)(nil),          // 2: google.protobuf.Timestamp
	(*Appointments)(nil),                   // 3: pb.Appointments
}
var file_barber_rpc_appointments_list_bydate_proto_depIdxs = []int32{
	2, // 0: pb.ListAppointmentsByDateRequest.appointment_datetime:type_name -> google.protobuf.Timestamp
	3, // 1: pb.ListAppointmentsByDateResponse.appointment:type_name -> pb.Appointments
	2, // [2:2] is the sub-list for method output_type
	2, // [2:2] is the sub-list for method input_type
	2, // [2:2] is the sub-list for extension type_name
	2, // [2:2] is the sub-list for extension extendee
	0, // [0:2] is the sub-list for field type_name
}

func init() { file_barber_rpc_appointments_list_bydate_proto_init() }
func file_barber_rpc_appointments_list_bydate_proto_init() {
	if File_barber_rpc_appointments_list_bydate_proto != nil {
		return
	}
	file_barber_appointments_proto_init()
	if !protoimpl.UnsafeEnabled {
		file_barber_rpc_appointments_list_bydate_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListAppointmentsByDateRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_barber_rpc_appointments_list_bydate_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListAppointmentsByDateResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_barber_rpc_appointments_list_bydate_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   2,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_barber_rpc_appointments_list_bydate_proto_goTypes,
		DependencyIndexes: file_barber_rpc_appointments_list_bydate_proto_depIdxs,
		MessageInfos:      file_barber_rpc_appointments_list_bydate_proto_msgTypes,
	}.Build()
	File_barber_rpc_appointments_list_bydate_proto = out.File
	file_barber_rpc_appointments_list_bydate_proto_rawDesc = nil
	file_barber_rpc_appointments_list_bydate_proto_goTypes = nil
	file_barber_rpc_appointments_list_bydate_proto_depIdxs = nil
}

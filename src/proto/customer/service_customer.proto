syntax = "proto3";

package pb;

import "customer/rpc_create_customer.proto";
import "customer/rpc_login_customer.proto";
import "customer/rpc_update_customer.proto";
import "customer/rpc_refresh_token_customer.proto";
import "customer/rpc_change_password_customer.proto";

import "google/api/annotations.proto";
import "protoc-gen-openapiv2/options/annotations.proto";

option go_package = "barbershop/src/pb/customer";

option (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_swagger) = {
    info: {
      title: "Barber Shop API",
      version: "1.1";
      contact: {
        name: "Thinh Kai";
        url: "";
        email: "dvanthinh06@gmail.com";
      };
    //   license: {
    //     name: "BSD 3-Clause License";
    //     url: "https://github.com/grpc-ecosystem/grpc-gateway/blob/main/LICENSE";
    //   };
    //   extensions: {
    //     key: "x-something-something";
    //     value {string_value: "yadda"}
    //   }
    };
};

service CustomerBarberShop {

  // authencation
    rpc CreateCustomer (CreateCustomerRequest) returns (CreateCustomerResponse){
        option (google.api.http) = {
                  post: "/v1/customers"
                  body: "*"
                };
        option (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_operation) = {
          summary: "Create a customer"
          description: "API endpoint to create a customer account"
        };
    }

    rpc UpdateCustomer (UpdateCustomerRequest) returns (UpdateCustomerResponse) {
      option (google.api.http) = {
        patch: "/v1/customers"
        body: "*"
      };
      option (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_operation) = {
        summary: "Update a customer"
        description: "API endpoint to update customer information" 
      };
    }

    rpc ChangePasswordCustomer (ChangePasswordCustomerRequest) returns (ChangePasswordCustomerResponse) {
      option (google.api.http) = {
        post: "/v1/customers/change-password"
        body: "*"
      };
      option (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_operation) = {
        summary: "Change password a customer"
        description: "API endpoint to change password information" 
      };
    }

    rpc LoginCustomer (LoginCustomerRequest) returns (LoginCustomerResponse) {
      option (google.api.http) = {
        post: "/v1/customers/login"
        body: "*"
      };
      option (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_operation) = {
        summary: "Customer login"
        description: "API endpoint for customer authentication" 
      };
    }

    rpc RefreshTokenCustomer (RefreshTokenCustomerRequest) returns (RefreshTokenCustomerResponse) {
      option (google.api.http) = {
        post: "/v1/customers/refresh-token"
        body: "*"
      };
      option (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_operation) = {
        summary: "Refresh customer token"
        description: "API endpoint to refresh the authentication token for a customer" 
      };
    }
}


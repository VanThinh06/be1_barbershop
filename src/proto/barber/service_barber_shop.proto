syntax = "proto3";

package pb;

import "google/api/annotations.proto";
import "barber/rpc_create_barber.proto";
import "barber/rpc_login_barber.proto";
import "barber/rpc_refresh_token_barber.proto";
import "barber/rpc_update_barber.proto";
import "barber/rpc_create_barbershop.proto";
import "barber/rpc_create_service_category.proto";
import "barber/rpc_create_services.proto";
import "barber/rpc_find_barber_shop_nearby.proto";
import "barber/rpc_code_barbershop.proto";
import "protoc-gen-openapiv2/options/annotations.proto";

option go_package = "barbershop/src/pb/barber";

option (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_swagger) = {
    info: {
      title: "Barber Shop API",
      version: "1.0";
      contact: {
        name: "Thinh Kai";
        url: "";
        email: "dvanthinh06@gmail.com";
      };
    //   license: {
    //     name: "BSD 3-Clause License";
    //     url: "https://github.com/grpc-ecosystem/grpc-gateway/blob/main/LICENSE";
    //   };
    //   extensions: {
    //     key: "x-something-something";
    //     value {string_value: "yadda"}
    //   }
    };
};

service BarberShop {
    rpc CreateBarber (CreateBarberRequest) returns (CreateBarberResponse){
        option (google.api.http) = {
                  post: "/v1/create_barber"
                  body: "*"
                };
        option (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_operation) = {
          description: "API endpoint to create a new barber"
          summary: "Create a barber"
        };
    }

    rpc LoginBarber (LoginBarberRequest) returns (LoginBarberResponse) {
      option (google.api.http) = {
        post: "/v1/authenticate_barber"
        body: "*"
      };
      option (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_operation) = {
        description: "API endpoint for barber authentication" 
        summary: "Authenticate a barber"
      };
    }

    rpc RefreshTokenBarber (RefreshTokenBarberRequest) returns (RefreshTokenBarberResponse) {
      option (google.api.http) = {
        post: "/v1/refresh_token"
        body: "*"
      };
      option (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_operation) = {
        description: "API endpoint for barber authentication" 
        summary: "Authenticate a barber"
      };
    }

    rpc UpdateBarber (UpdateBarberRequest) returns (UpdateBarberResponse) {
      option (google.api.http) = {
        patch: "/v1/authenticate_barber"
        body: "*"
      };
      option (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_operation) = {
        description: "API endpoint for barber authentication" 
        summary: "Authenticate a barber"
      };
    }


  rpc FindBarberShopsNearby (FindBarberShopsNearbyRequest) returns (FindBarberShopsNearbyResponse){
    option (google.api.http) = {
              post: "/v1/find_barber_shop_nearby"
              body: "*"
            };
    option (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_operation) = {
      description: "API endpoint to create a new barber"
      summary: "find barber shop nearby"
    };
  }

  rpc NewServicesCategory (CreateServicesCategoryPublicRequest) returns (CreateServicesCategoryResponse){
    option (google.api.http) = {
              post: "/v1/manager/create-category-service"
              body: "*"
            };
    option (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_operation) = {
      description: "API endpoint to create a new barber"
      summary: "Create a service category"
    };
  }

  rpc NewServiceCategoryPrivate (CreateServicesCategoryPrivateRequest) returns (CreateServicesCategoryResponse){
    option (google.api.http) = {
              post: "/v1/manager/create-category-service-private"
              body: "*"
            };
    option (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_operation) = {
      description: "API endpoint to create a new barber"
      summary: "Create a service category"
    };
  }

  rpc UpdateServicesCategoryPublicSeparate (UpdateServicesCategoryPublicSeparateRequest) returns (CreateServicesCategoryResponse){
    option (google.api.http) = {
              post: "/v1/manager/update-category-service"
              body: "*"
            };
    option (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_operation) = {
      description: "API endpoint to create a new barber"
      summary: "Create a service category"
    };
  }
  
  rpc NewServices (CreateServicesPublicRequest) returns (CreateServicesResponse){
      option (google.api.http) = {
                post: "/v1/manager/create-services"
                body: "*"
              };
      option (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_operation) = {
        description: "API endpoint to create a new barber"
        summary: "Create a service category"
      };
    }
    
    rpc NewServicesPrivate (CreateServicesPrivateRequest) returns (CreateServicesResponse){
      option (google.api.http) = {
                post: "/v1/manager/create-services-private"
                body: "*"
              };
      option (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_operation) = {
        description: "API endpoint to create a new barber"
        summary: "Create a service category"
      };
    }
    rpc UpdateServicesPublicSeparate (UpdateServicesPublicSeparateRequest) returns (CreateServicesResponse){
      option (google.api.http) = {
                post: "/v1/manager/update-services"
                body: "*"
              };
      option (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_operation) = {
        description: "API endpoint to create a new barber"
        summary: "Create a service category"
      };
    }
  rpc NewBarberShops (CreateBarberShopsRequest) returns (CreateBarberShopsResponse){
        option (google.api.http) = {
                  post: "/v1/manager/create-barber-shop"
                  body: "*"
                };
        option (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_operation) = {
          description: "API endpoint to create a new barber"
          summary: "Create a barber"
        };
    }

  rpc GenerateCodeBarberShop (CodeBarberShopRequest) returns (CodeBarberShopResponse){
      option (google.api.http) = {
                post: "/v1/manager/generate-code"
                body: "*"
              };
      option (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_operation) = {
        description: "API endpoint to create a new barber"
        summary: "Create a service category"
};
}
}

syntax = "proto3";

package pb;
import "barber/rpc_upload_image.proto";

import "barber/rpc_provinces_get.proto";
import "barber/rpc_districts_get.proto";
import "barber/rpc_wards_get.proto";

import "barber/rpc_barbershop_chains_create.proto";
import "barber/rpc_barbershop_chains_get.proto";
import "barber/rpc_barbershop_chains_update.proto";
import "barber/rpc_barbershop_chains_delete.proto";


import "barber/rpc_barbershop.proto";


import "barber/rpc_barbers_get.proto";
import "barber/rpc_barbers_update.proto";
import "barber/rpc_barbers_permission.proto";

import "barber/rpc_barber_employee.proto";

import "barber/rpc_barbers_get_employee.proto";
import "barber/rpc_barbers_delete_employee.proto";

import "barber/rpc_barbers_login.proto";
import "barber/rpc_barbers_refresh_token.proto";
import "barber/rpc_authentication_barber.proto";

import "barber/rpc_appointments_create.proto";
import "barber/rpc_appointments_list_bydate.proto";

// service
import "barber/rpc_service_category.proto";
import "barber/rpc_service_item.proto";
import "barber/rpc_service_package.proto";


import "google/api/annotations.proto";

import "protoc-gen-openapiv2/options/annotations.proto";

option go_package = "barbershop/src/pb/barber";

option (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_swagger) = {
    info: {
      title: "Barber Shop API",
      version: "1.0";
      contact: {
        name: "Thinh Kai";
        url: "";
        email: "dvanthinh06@gmail.com";
      };
    //   license: {
    //     name: "BSD 3-Clause License";
    //     url: "https://github.com/grpc-ecosystem/grpc-gateway/blob/main/LICENSE";
    //   };
    //   extensions: {
    //     key: "x-something-something";
    //     value {string_value: "yadda"}
    //   }
    };
};

service BarberService {
  

//BARBERSHOP 
// chains
rpc CreateBarberShopChains (CreateBarberShopChainsRequest) returns (CreateBarberShopChainsResponse){
  option (google.api.http) = {
    post: "/v1/barbershop-chains"
    body: "*"
  };
  option (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_operation) = {
  description: "API endpoint to create a barber shop chains"
  summary: "Create barber chains"
  tags: "barber shop chains"
};
}
rpc GetBarberShopChains (GetBarberShopChainsRequest) returns (GetBarberShopChainsResponse){
  option (google.api.http) = {
    get: "/v1/barbershop-chains/{id}"
  };
  option (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_operation) = {
  description: "API endpoint to get a barber shop chains"
  summary: "Get barber chains"
  tags: "barber shop chains"
};
}

rpc UpdateBarberShopChains (UpdateBarberShopChainsRequest) returns (UpdateBarberShopChainsResponse){
  option (google.api.http) = {
    put: "/v1/barbershop-chains"
    body: "*"
  };
  option (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_operation) = {
  description: "API endpoint to update role_id a barber roles"
  summary: "Update barber shop chain"
  tags: "barber shop chains"
};
}

rpc DeleteBarberShopChains (DeleteBarberShopChainsRequest) returns (DeleteBarberShopChainsResponse){
  option (google.api.http) = {
    delete: "/v1/barbershop-chains/{id}"
  };
  option (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_operation) = {
  description: "API endpoint to delete a barber shop chains"
  summary: "Delete barber chains"
  tags: "barber shop chains"
};
}

rpc CreateBarberShop (CreateBarberShopRequest) returns (CreateBarberShopResponse){
  option (google.api.http) = {
            post: "/v1/barbershop"
            body: "*"
          };
  option (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_operation) = {
    description: "API endpoint to create a new barber shop"
    summary: "Create a barber shop"
    tags: "barber shop"
  };
}

rpc ListBarberShops (ListBarberShopsRequest) returns (ListBarberShopsResponse){
  option (google.api.http) = {
            get: "/v1/barbershops"
          };
  option (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_operation) = {
    description: "API endpoint to get barber shop"
    summary: "Get barber shop"
    tags: "barber shop"
  };
}

rpc GetBarberShop (GetBarberShopRequest) returns (GetBarberShopResponse){
  option (google.api.http) = {
    get: "/v1/barbershop/{id}"
  };
  option (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_operation) = {
    description: "API endpoint to create a new barber shop"
    summary: "Get a details barber shop"
    tags: "barber shops"
  };
}

rpc GetPermissionFromBarberShop (GetPermissionFromBarberShopRequest) returns (GetPermissionFromBarberShopResponse){
  option (google.api.http) = {
      get: "/v1/barbershop/{barber_shop_id}/getPermission"
  };
  option (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_operation) = {
    description: "API endpoint to update a new barber shop"
    summary: "Get permission from barber shop"
    tags: "barber shops"
  };
}

rpc UpdateBarberShop (UpdateBarberShopRequest) returns (UpdateBarberShopResponse){
  option (google.api.http) = {
            patch: "/v1/barbershops/{id}"
            body:  "*"
            };
  option (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_operation) = {
    description: "API endpoint to update a new barber shop"
    summary: "Update barber shop"
    tags: "barber shops"
  };
}

rpc DeleteBarberShops (DeleteBarberShopsRequest) returns (DeleteBarberShopsResponse){
  option (google.api.http) = {
            delete: "/v1/barbershops/{id}"
          };
  option (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_operation) = {
    description: "API endpoint to update a new barber shop"
    summary: "Delete barber shop"
    tags: "barber shops"
  };
}




/// SERVICE CATEGORIES
rpc CreateServiceCategory (CreateServiceCategoryRequest) returns (CreateServiceCategoryResponse){
  option (google.api.http) = {
    post: "/v1/service-category"
    body: "*"
  };
  option (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_operation) = {
  description: "API endpoint to create a service category"
  summary: "Create service category"
  tags: "service categories"
};
}

rpc ListServiceCategory (ListServiceCategoryRequest) returns (ListServiceCategoryResponse){
  option (google.api.http) = {
    get: "/v1/barbershop/{barber_shop_id}/service-category"
  };
  option (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_operation) = {
  description: "API endpoint to create a service category"
  summary: "Get service category"
  tags: "service categories"
};
}

rpc UpdateServiceCategory (UpdateServiceCategoryRequest) returns (UpdateServiceCategoryResponse){
  option (google.api.http) = {
    patch: "/v1/service-category"
    body: "*"
  };
  option (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_operation) = {
  description: "API endpoint to update a service category"
  summary: "Update service category"
  tags: "service categories"
};
}

rpc DeleteServiceCategory (DeleteServiceCategoryRequest) returns (DeleteServiceCategoryResponse){
  option (google.api.http) = {
    delete: "/v1/service-category"
    body: "*"
  };
  option (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_operation) = {
  description: "API endpoint to delete a service category"
  summary: "Delete service category"
  tags: "service categories"
};
}

rpc ListCategoryPosition (ListServiceCategoryRequest) returns (ListServiceCategoryResponse){
  option (google.api.http) = {
    get: "/v1/barbershop/{barber_shop_id}/category-position"
  };
  option (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_operation) = {
  description: "API endpoint to create a service category"
  summary: "Get service category"
  tags: "service categories"
};
}

rpc UpdateCategoryPosition (UpdateCategoryPositionRequest) returns (UpdateCategoryPositionResponse){
  option (google.api.http) = {
    post: "/v1/category-position"
    body: "*"
  };
  option (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_operation) = {
  description: "API endpoint to delete a service category"
  summary: "Delete service category"
  tags: "category positions"
};
}

// service
rpc CreateServiceItem (CreateServiceItemRequest) returns (CreateServiceItemResponse){
  option (google.api.http) = {
    post: "/v1/service-item"
    body: "*"
  };
  option (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_operation) = {
  description: "API endpoint to create a service"
  summary: "Create service"
  tags: "barbershop services"
};
}

rpc GetServiceItem (GetServiceItemRequest) returns (GetServiceItemResponse){
  option (google.api.http) = {
    get: "/v1/service-item/{id}"
  };
  option (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_operation) = {
  description: "API endpoint to service detail"
  summary: "Service detail"
  tags: "barbershop services"
};
}

rpc ListServiceItem (ListServiceItemRequest) returns (ListServiceItemResponse){
  option (google.api.http) = {
    get: "/v1/barbershop/{barber_shop_id}/service-item"
  };
  option (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_operation) = {
  description: "API endpoint to get list services"
  summary: "List services"
  tags: "barbershop services"
};
}

rpc UpdateServiceItem (UpdateServiceItemRequest) returns (UpdateServiceItemResponse){
  option (google.api.http) = {
    patch: "/v1/service-item"
    body: "*"
  };
  option (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_operation) = {
  description: "API endpoint to update a service category"
  summary: "Update service category"
  tags: "service categories"
};
}

rpc DeleteServiceItem (DeleteServiceItemRequest) returns (DeleteServiceItemResponse){
  option (google.api.http) = {
    delete: "/v1/barbershop/{barber_shop_id}/service-item/{id}"
  };
  option (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_operation) = {
  description: "API endpoint to update a service category"
  summary: "Update service category"
  tags: "service categories"
};
}


// service package
rpc CreateServicePackage (CreateServicePackageRequest) returns (CreateServicePackageResponse){
  option (google.api.http) = {
    post: "/v1/service-package"
    body: "*"
  };
  option (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_operation) = {
  description: "API endpoint to create a service"
  summary: "Create service"
  tags: "barbershop services"
};
}

rpc GetServicePackage (GetServicePackageRequest) returns (GetServicePackageResponse){
  option (google.api.http) = {
    get: "/v1/service-package/{id}"
  };
  option (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_operation) = {
  description: "API endpoint to service detail"
  summary: "Service detail"
  tags: "barbershop services"
};
}

rpc ListServicePackage (ListServicePackageRequest) returns (ListServicePackageResponse){
  option (google.api.http) = {
    get: "/v1/barbershop/{barber_shop_id}/service-package"
  };
  option (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_operation) = {
  description: "API endpoint to get list services"
  summary: "List services"
  tags: "barbershop services"
};
}

rpc UpdateServicePackage (UpdateServicePackageRequest) returns (UpdateServicePackageResponse){
  option (google.api.http) = {
    patch: "/v1/service-package"
    body: "*"
  };
  option (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_operation) = {
  description: "API endpoint to update a service package"
  summary: "Update service package"
  tags: "service package"
};
}

rpc DeleteServicePackage (DeleteServicePackageRequest) returns (DeleteServicePackageResponse){
  option (google.api.http) = {
    delete: "/v1/barbershop/{barber_shop_id}/service-package/{id}"
  };
  option (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_operation) = {
  description: "API endpoint to update a service category"
  summary: "Update service category"
  tags: "service categories"
};
}


// Appointments
rpc CreateAppointments (CreateAppointmentsRequest) returns (CreateAppointmentsResponse){
  option (google.api.http) = {
            post: "/v1/appointments"
            body: "*"
          };
  option (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_operation) = {
    description: "API endpoint to create a new appointment"
    summary: "Create a appointments"
    tags: "appointments"

  };
}

rpc ListAppointmentsByDate (ListAppointmentsByDateRequest) returns (ListAppointmentsByDateResponse){
option (google.api.http) = {
          get: "/v1/appointments"
        };
option (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_operation) = {
  description: "API endpoint to list appointments by date"
  summary: "list appointments by date"
  tags: "appointments"
};
}

// Barber
    rpc CreateBarber (CreateBarberRequest) returns (CreateBarberResponse){
        option (google.api.http) = {
                  post: "/v1/barber"
                  body: "*"
                };
        option (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_operation) = {
          description: "API endpoint to create a new barber"
          summary: "Create a barber"
          tags: "barbers"
        };
    }

    rpc CreateBarberEmployee (CreateBarberEmployeeRequest) returns (CreateBarberEmployeeResponse){
      option (google.api.http) = {
                post: "/v1/barber-employee"
                body: "*"
              };
      option (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_operation) = {
        description: "API endpoint to create barber employee"
        summary: "Create a barber"
        tags: "barbers"
      };
  }


  rpc GetBarberEmployees (GetBarberEmployeeRequest) returns (GetBarberEmployeeResponse){
    option (google.api.http) = {
              get: "/v1/barber-employee/{barber_shop_id}"
            };
    option (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_operation) = {
      description: "API endpoint to get barber employee"
      summary: "Get list barber employee"
      tags: "barbers"
    };
}

    rpc GetBarber (GetBarbersRequest) returns (GetBarbersResponse){
      option (google.api.http) = {
                post: "/v1/barber-detail"
                body: "*"
              };
      option (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_operation) = {
        description: "API endpoint to get detail barber"
        summary: "Get a barber"
        tags: "barbers"
      };
    }


    rpc UpdateBarber (UpdateBarberRequest) returns (UpdateBarberResponse) {
      option (google.api.http) = {
        patch: "/v1/barber-detail"
        body: "*"
      };
      option (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_operation) = {
        description: "API endpoint for barber authentication" 
        summary: "Authenticate a barber"
        tags: "barbers"
      };
    }

    rpc DeleteBarberEmployee (DeleteBarberEmployeeRequest) returns (DeleteBarberEmployeeResponse) {
      option (google.api.http) = {
        delete: "/v1/barber-employee/{id}"
        body: "*"
      };
      option (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_operation) = {
        description: "API endpoint for barber authentication" 
        summary: "Authenticate a barber"
        tags: "barbers"
      };
    }

    
    rpc LoginBarber (LoginBarberRequest) returns (LoginBarberResponse) {
      option (google.api.http) = {
        post: "/v1/barber/login"
        body: "*"
      };
      option (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_operation) = {
        description: "API endpoint for barber authentication" 
        summary: "Authenticate a barber"
        tags: "barbers"
      };
    }
    
    rpc RefreshTokenBarber (RefreshTokenBarberRequest) returns (RefreshTokenBarberResponse) {
      option (google.api.http) = {
        post: "/v1/barber/refresh-token"
        body: "*"
      };
      option (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_operation) = {
        description: "API endpoint for barber authentication" 
        summary: "Authenticate a barber"
        tags: "barbers"
      };
    }

    rpc ForgotPasswordBarber (ForgotPasswordBarberRequest) returns (ForgotPasswordBarberResponse) {
      option (google.api.http) = {
        post: "/v1/barber/forgot-password"
        body: "*"
      };
      option (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_operation) = {
        description: "API endpoint for barber authentication" 
        summary: "forgot password barber"
        tags: "authentication"
      };
    }

    rpc VerifyOtpBarber (VerifyOtpBarberRequest) returns (VerifyOtpBarberResponse) {
      option (google.api.http) = {
        post: "/v1/barber/verify-otp"
        body: "*"
      };
      option (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_operation) = {
        description: "API endpoint for barber authentication" 
        summary: "forgot password barber"
        tags: "authentication"
      };
    }

    rpc ResetPasswordBarber (ResetPasswordBarberRequest) returns (ResetPasswordBarberResponse) {
      option (google.api.http) = {
        post: "/v1/barber/reset-password"
        body: "*"
      };
      option (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_operation) = {
        description: "API endpoint for barber authentication" 
        summary: "reset password barber"
        tags: "authentication"
      };
    }

    /// lookup
    rpc GetProvinces (GetProvincesRequest) returns (GetProvincesResponse) {
      option (google.api.http) = {
        get: "/v1/provinces"
      };
      option (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_operation) = {
        description: "API endpoint for get provinces" 
        summary: "Get provinces"
        tags: "lookup"
      };
    }

    rpc GetDistricts (GetDistrictsRequest) returns (GetDistrictsResponse) {
      option (google.api.http) = {
        get: "/v1/districts/{province_id}"
      };
      option (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_operation) = {
        description: "API endpoint for get districts" 
        summary: "Get districts"
        tags: "lookup"
      };
    }

    rpc GetWards (GetWardsRequest) returns (GetWardsResponse) {
      option (google.api.http) = {
        get: "/v1/wards/{district_id}"
      };
      option (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_operation) = {
        description: "API endpoint for get wards" 
        summary: "Get wards"
        tags: "lookup"
      };
    }

    rpc UploadImage(UploadImageRequest) returns (UploadImageResponse) {
        option (google.api.http) = {
            post: "/v1/upload"
            body: "*"
        };
        option (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_operation) = {
            description: "API endpoint to upload an image"
            summary: "Upload image"
            tags: ["upload"]
        };
      }
}
    

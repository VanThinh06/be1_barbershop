// Code generated by sqlc. DO NOT EDIT.
// versions:
//   sqlc v1.19.1
// source: store.sql

package db

import (
	"context"

	"github.com/lib/pq"
	null "gopkg.in/guregu/null.v4"
)

const createStore = `-- name: CreateStore :one
INSERT INTO store (
name_id,
name_store,
location,
address,
image,
list_image,
manager_id,
status
) VALUES (
  $1, $2, $3, $4, $5, $6, $7, $8
)
RETURNING id, name_id, name_store, location, address, image, list_image, manager_id, employee_id, status, created_at, update_at
`

type CreateStoreParams struct {
	NameID    string      `json:"name_id"`
	NameStore string      `json:"name_store"`
	Location  float32     `json:"location"`
	Address   string      `json:"address"`
	Image     null.String `json:"image"`
	ListImage []string    `json:"list_image"`
	ManagerID []string    `json:"manager_id"`
	Status    int32       `json:"status"`
}

func (q *Queries) CreateStore(ctx context.Context, arg CreateStoreParams) (Store, error) {
	row := q.db.QueryRowContext(ctx, createStore,
		arg.NameID,
		arg.NameStore,
		arg.Location,
		arg.Address,
		arg.Image,
		pq.Array(arg.ListImage),
		pq.Array(arg.ManagerID),
		arg.Status,
	)
	var i Store
	err := row.Scan(
		&i.ID,
		&i.NameID,
		&i.NameStore,
		&i.Location,
		&i.Address,
		&i.Image,
		pq.Array(&i.ListImage),
		pq.Array(&i.ManagerID),
		pq.Array(&i.EmployeeID),
		&i.Status,
		&i.CreatedAt,
		&i.UpdateAt,
	)
	return i, err
}

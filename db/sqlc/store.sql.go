// Code generated by sqlc. DO NOT EDIT.
// source: store.sql

package db

import (
	"context"
	"database/sql"


	"github.com/google/uuid"
	null "gopkg.in/guregu/null.v4"
)

const createStore = `-- name: CreateStore :one

INSERT INTO store (name_store,manager_id, employee_id, location, status)
VALUES ($1,
        $2,
        $3,
        $4,
        $5
        ) RETURNING id, name_store, location, manager_id, employee_id, status, created_at, update_at
`

type CreateStoreParams struct {
	NameStore  null.String   `json:"name_store"`
	ManagerID  uuid.UUID     `json:"manager_id"`
	EmployeeID uuid.UUID     `json:"employee_id"`
	Location   sql.NullInt32 `json:"location"`
	Status     null.String   `json:"status"`
}

func (q *Queries) CreateStore(ctx context.Context, arg CreateStoreParams) (Store, error) {
	row := q.db.QueryRowContext(ctx, createStore,
		arg.NameStore,
		arg.ManagerID,
		arg.EmployeeID,
		arg.Location,
		arg.Status,
	)
	var i Store
	err := row.Scan(
		&i.ID,
		&i.NameStore,
		&i.Location,
		&i.ManagerID,
		&i.EmployeeID,
		&i.Status,
		&i.CreatedAt,
		&i.UpdateAt,
	)
	return i, err
}

// Code generated by sqlc. DO NOT EDIT.
// source: schedulerwork.sql

package db

import (
	"context"
	"time"

	"github.com/google/uuid"
	"github.com/lib/pq"
)

const createSchedulerWork = `-- name: CreateSchedulerWork :one

INSERT INTO schedulerwork(barber_id, users_id, timerstart, timerend, service, total_price, status)
VALUES ($1,
        $2,
        $3,
        $4,
        $5,
        $6,
        $7) RETURNING id, barber_id, users_id, timerstart, timerend, service, total_price, status, created_at, update_at
`

type CreateSchedulerWorkParams struct {
	BarberID   uuid.UUID   `json:"barber_id"`
	UsersID    string      `json:"users_id"`
	Timerstart time.Time   `json:"timerstart"`
	Timerend   time.Time   `json:"timerend"`
	Service    []uuid.UUID `json:"service"`
	TotalPrice float32     `json:"total_price"`
	Status     int32       `json:"status"`
}

func (q *Queries) CreateSchedulerWork(ctx context.Context, arg CreateSchedulerWorkParams) (Schedulerwork, error) {
	row := q.db.QueryRowContext(ctx, createSchedulerWork,
		arg.BarberID,
		arg.UsersID,
		arg.Timerstart,
		arg.Timerend,
		pq.Array(arg.Service),
		arg.TotalPrice,
		arg.Status,
	)
	var i Schedulerwork
	err := row.Scan(
		&i.ID,
		&i.BarberID,
		&i.UsersID,
		&i.Timerstart,
		&i.Timerend,
		pq.Array(&i.Service),
		&i.TotalPrice,
		&i.Status,
		&i.CreatedAt,
		&i.UpdateAt,
	)
	return i, err
}
